name: squeeze-vid
summary: Normalize videos to a minimal, projection-compatible quality.
website: https://github.com/sil-car/squeeze-vid
contact: https://github.com/sil-car/squeeze-vid/issues
issues: https://github.com/sil-car/squeeze-vid/issues
license: GPL-3.0+
title: Squeeze Vid
icon: pkg-data/video-editor_512.png
description: |
  CLI tool to normalize videos and audio files (using ffmpeg) to a standardized
  frame rate and quality to minimize the file size while maintaining adequate
  quality for video projection. Options also include changing video playback
  speed, trimming the video to only keep a portion of it, and exporting the audio
  from a video file.

  Use the --help option for more information:
  $ squeeze-vid --help

adopt-info: squeeze-vid  # for setting version and grade
confinement: strict
base: core24
platforms:
  arm64:
  amd64:
environment:  # find out-of-place libs
  LD_LIBRARY_PATH: $SNAP/usr/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/pulseaudio:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/vdpau:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/dri

apps:
  squeeze-vid:
    command: bin/squeeze-vid
    # YAML aliases (e.g. "&allplugs"):
    # https://www.linode.com/docs/guides/yaml-anchors-aliases-overrides-extensions/
    plugs: &allplugs
      # - audio-playback  # surely only needed if including ffplay?
      - home
      - removable-media
  ffmpeg:
    command: usr/bin/ffmpeg
    plugs: *allplugs
  ffprobe:
    command: usr/bin/ffprobe
    plugs: *allplugs

parts:
  squeeze-vid:
    after:
      - ffmpeg
    plugin: python
    source: https://github.com/sil-car/squeeze-vid.git
    source-depth: 1
    override-pull: |
      craftctl default
      snap_ver=$(grep 'VERSION =' $CRAFT_PART_SRC/squeeze_vid/config.py | grep -Eo '[0-9.]+')
      ffmpeg_ver="ffmpeg7.0" # needs to match parts > ffmpeg > source-branch below
      craftctl set version="${snap_ver}+${ffmpeg_ver}"
      craftctl set grade="stable"
    prime:  # why are these auto-included in the built snap?
      - -lib/python3.12/site-packages/pip*
      - -lib/python3.12/site-packages/setuptools*
      - -lib/python3.12/site-packages/wheel*

  # Build ffmpeg from source.
  # https://forum.snapcraft.io/t/proper-way-to-leverage-another-snap-in-a-snap/3893/2
  ffmpeg:
    build-packages:
      - git
      - g++
      - make
      - autoconf
      - automake
      - build-essential
      - cmake
      - libaom-dev # libaom-av1 encoder is way too slow on 20.04, but its decoder is better
      - libass-dev
      - libfreetype6-dev
      - libmp3lame-dev
      # - libopus-dev
      - libsdl1.2-dev
      - libsvtav1dec-dev # 22.04+; or build from src
      - libsvtav1enc-dev
      # - libtheora-dev
      - libtool
      - libva-dev
      - libvdpau-dev
      # - libvorbis-dev
      - libvpx-dev
      - libx264-dev
      - libx265-dev
      - libxcb1-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - nvidia-vaapi-driver
      - pkg-config
      - texinfo
      - yasm
      - zlib1g-dev
    plugin: autotools
    autotools-configure-parameters:
      # https://github.com/Archiv8/ffmpeg/blob/main/FFMMPEG-CONFIGURE.md
      # https://ffmpeg.org/general.html#Supported-File-Formats_002c-Codecs-or-Features
      - --prefix=/usr
      - --disable-debug
      - --disable-doc # removes all docs --disable-{htmlpages,manpages,txtpages}
      - --disable-ffplay
      - --disable-static
      - --enable-gpl
      - --enable-libaom         # AV1 video encoder
      # - --disable-encoder=libaom
      - --enable-libass         # subtitles support
      - --enable-libmp3lame
      - --enable-libsvtav1      # SVT-AV1 video encoder; requires packages libsvtav1{,-dev}; or build from src
      - --enable-libvpx         # VP9 video encoder
      - --enable-libx264        # H.264 video encoder
      - --enable-libx265
      # - --enable-nonfree # makes binary unredistributable; ref: ffmpeg/LICENSE.md
      - --enable-opengl
      - --enable-shared
      - --enable-version3
    source: https://git.ffmpeg.org/ffmpeg.git
    source-type: git
    source-depth: 1 # faster clone?
    source-branch: 'n7.0'
    stage-packages:
      # Ref: snapcraftctl build output.
      # - freeglut3 (-dev?)
      - libasound2t64
      - libaom3 # encoder way too slow on 20.04, but decoder is still useful
      - libass9
      - libasyncns0
      # - libcairo2
      - libdecor-0-0
      - libflac12t64
      - libfontconfig1
      # - libfreetype6
      - libfribidi0
      - libgbm1
      - libgl1
      # - libglu1-mesa
      - libglx0
      - libgraphite2-3
      - libharfbuzz0b
      - libmp3lame0
      - libmpg123-0t64
      # - libnuma1
      - libogg0
      - libopus0
      - libpixman-1-0
      - libpng16-16t64
      - libpulse0
      - libsamplerate0
      - libsdl2-2.0-0
      - libsndfile1
      - libsndio7.0
      - libsvtav1enc1d1
      # - libtheora0
      - libva-drm2
      - libva-x11-2
      - libva2
      - libvdpau1
      - libvorbis0a
      - libvorbisenc2
      - libvpx9
      - libwayland-client0
      - libwayland-cursor0
      - libwayland-egl1
      - libwayland-server0
      - libx264-164
      - libx265-199
      - libxcb-randr0
      - libxcb-render0
      - libxcb-shape0
      - libxcb-xfixes0
      - libxcb1
      - libxcursor1
      - libxi6
      - libxrandr2
      - libxrender1
      - libxss1
      - libxv1
      - nvidia-vaapi-driver
      - vdpau-driver-all
      # External libraries providing hardware acceleration:
      # v4l2_m2m, vaapi
    prime:
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libGLX_mesa.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libicui18n.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libicuio.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libicutest.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libicutu.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libpixman-1.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libpulse-simple.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libvulkan.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxcb-dri2.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxcb-glx.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxcb-present.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxcb-render.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxcb-sync.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libxshmfence.so*
      - -usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libXxf86vm.so*
      - -usr/share/ffmpeg/examples

  cleanup:
    # https://forum.snapcraft.io/t/reduce-size-of-qt5-app-snap/31030/7
    after:
      - ffmpeg
      - squeeze-vid
    plugin: nil
    build-snaps:
      - core24
    override-prime: |
      set -eux
      craftctl default
      # # Remove any files that are also provided by the core snap.
      # cd "/snap/core24/current" && find . -type f,l -exec rm -f "$CRAFT_PRIME/{}" \;
      find $CRAFT_PRIME/usr/share/doc/ -type f -not -name 'copyright' -delete
      find $CRAFT_PRIME -type d -empty -delete
    prime:
      - -include
      - -lib64
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/doc-base
      - -usr/share/man
